<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ckj&#39;s blog</title>
    <link>https://endlesshair.github.io/post/</link>
    <description>Recent content in Posts on ckj&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 06 May 2021 16:44:34 +0800</lastBuildDate><atom:link href="https://endlesshair.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>秒杀系统——秒杀接口优化</title>
      <link>https://endlesshair.github.io/post/%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%A7%92%E6%9D%80%E6%8E%A5%E5%8F%A3%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 06 May 2021 16:44:34 +0800</pubDate>
      
      <guid>https://endlesshair.github.io/post/%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%A7%92%E6%9D%80%E6%8E%A5%E5%8F%A3%E4%BC%98%E5%8C%96/</guid>
      <description>1.秒杀接口优化的思路 今天主要讲秒杀接口优化，就是对系统中 do_seckill 接口的优化。秒杀接口是系统中的核心接口，这个接口能承受的并发量直接决定了秒杀系统的性能。因为访问数据库是比较耗时的操作，所以秒杀优化的核心思路就是减少数据库的访问，具体思路如下： 在系统初始化的时候，把商品库存数量加载到 Redis</description>
    </item>
    
    <item>
      <title>秒杀系统——页面优化</title>
      <link>https://endlesshair.github.io/post/%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E9%A1%B5%E9%9D%A2%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 04 May 2021 14:45:46 +0800</pubDate>
      
      <guid>https://endlesshair.github.io/post/%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E9%A1%B5%E9%9D%A2%E4%BC%98%E5%8C%96/</guid>
      <description>1.常见的页面优化技术 课程中列出了如下几种页面优化方案： 页面缓存、URL 缓存、对象缓存 页面缓存就是将页面代码加入缓存，首先从缓存中读取，娶不到就手动渲染。URL 缓存就是具体一点的，如果说商品列表用页面缓存，那么商品详情就用 URL 缓存，因为每个商品的详情页不一样，其实 URL 缓存就是页面缓存</description>
    </item>
    
    <item>
      <title>秒杀系统——分布式Session</title>
      <link>https://endlesshair.github.io/post/%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E5%88%86%E5%B8%83%E5%BC%8FSession/</link>
      <pubDate>Sun, 02 May 2021 19:12:27 +0800</pubDate>
      
      <guid>https://endlesshair.github.io/post/%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E5%88%86%E5%B8%83%E5%BC%8FSession/</guid>
      <description>1.为什么要用分布式Session 通常一个大型项目不太可能部署在一个服务器上，一般都是部署在不同的服务器上，来进行分散压力。假如此时没有使用分布式Session，那么我们设想一种情景： 一个用户在 A 服务器登录，做登录处理的是 A 服务器，没毛病，那么当他下次请求时，处理的是 B 服务器，那</description>
    </item>
    
    <item>
      <title>Hugo&#43;GitHub搭建个人博客</title>
      <link>https://endlesshair.github.io/post/hugo&#43;GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 28 Feb 2021 21:25:10 +0800</pubDate>
      
      <guid>https://endlesshair.github.io/post/hugo&#43;GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>1. windows 64 位安装 Hugo 本文基于电脑已经安装了 Git，如何安装 Git，请自行百度哈^-^。 到 Hugo Releases，找到 hugo_0.80.0_Windows-64bit.zip 文件进行下载，下载后进行解压，即安装完成。解压之后重命名为 hugo，完整路径是 E:\blog\hugo，注意解压后的文件夹里面有一个 exe 文件就没错了。 查看 Hugo 是否安装成功：在 E:\blog\hugo</description>
    </item>
    
  </channel>
</rss>
